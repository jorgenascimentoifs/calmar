# Calmar - Plataforma de Meditação

## Visão Geral
Plataforma dedicada ao bem-estar mental através de práticas meditativas e acompanhamento personalizado.

## Estrutura de Páginas

### Dashboard (/dashboard)
- Página inicial após login
- Layout com sidebar fixa
- Cards de estatísticas
- Seção de próximas atividades
- Seção de progresso
- Responsiva em todos os breakpoints

### Perfil (/perfil)
- Gerenciamento de conta do usuário
- Edição de informações pessoais
- Configurações de segurança
- Preferências de notificações
- Responsiva em todos os breakpoints

### Diário (/dashboard/diario)
- Registro de práticas e reflexões
- Histórico de meditações
- Anotações pessoais

### Sessões (/dashboard/sessoes)
- Agendamento de sessões
- Histórico de práticas
- Estatísticas de progresso

## Design System
- Cores principais:
  - Verde principal: #478E89
  - Verde escuro: #2F6874
  - Verde claro: #A0CEC9
  - Texto principal: #39555C
  - Background: #FAF9F2
  - Bordas: #F5EFE0

- Tipografia:
  - Títulos: Nunito (700)
  - Texto: Inter (400, 500)

- Componentes:
  - Cards com bordas suaves
  - Botões com gradiente
  - Inputs com focus ring
  - Toasts para feedback
  - Modais com backdrop blur

## Padrões de Desenvolvimento
- Next.js 13+ com App Router
- Supabase para backend
- TailwindCSS para estilos
- TypeScript para type safety
- React Hot Toast para notificações

## Diretrizes de Segurança

### Logs e Debugging
- ❌ NUNCA fazer console.log de dados sensíveis como:
  - IDs de usuário
  - Tokens de autenticação
  - Emails
  - Senhas
  - Dados pessoais
  - Status de sessão
  
- ✅ Logs permitidos:
  - Mensagens genéricas de erro
  - Status de operações (sucesso/erro)
  - Informações não sensíveis da UI
  - Métricas de performance

### Boas Práticas de Segurança
1. Sempre usar variáveis de ambiente para chaves de API
2. Implementar rate limiting em endpoints sensíveis
3. Validar inputs do usuário
4. Usar HTTPS para todas as requisições
5. Implementar timeout em sessões
6. Sanitizar dados antes de exibir na UI
7. Usar Row Level Security (RLS) no Supabase

### Tratamento de Erros
- Usar mensagens genéricas para o usuário
- Logar detalhes técnicos apenas em ambiente de desenvolvimento
- Nunca expor stacktraces em produção
